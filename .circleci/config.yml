# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.6.2-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Use latest Bundler
      - run: gem update bundler

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path ./vendor/bundle --with test circle_ci

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-{{ checksum "Gemfile.lock" }}
            - v2-dependencies-

      - run:
          name: install Yarn dependencies
          command: |
             ./bin/yarn install --check-files

      - save_cache:
          paths:
            - ./node_modules
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}

      - run:
          name: copy configs
          command: |
            cp ./config/database.yml.sqlite.example ./config/database.yml
            cp ./config/mailer.yml.example ./config/mailer.yml
            cp ./config/credentials.yml.example ./config/credentials.yml
            bundle exec rails credentials:encrypt

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            bundle exec rails test

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
